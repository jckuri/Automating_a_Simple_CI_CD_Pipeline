name: Deploy

on:

  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'

  pull_request:
    branches:
      - main  

  workflow_dispatch:
    inputs:
      force_deploy:
        type: boolean
        default: false
        required: true

env:
  URL_CHECKER_TIMEOUT: 30

concurrency:
  group: pages-group
  cancel-in-progress: true

jobs:

  test:
  
    runs-on: ubuntu-latest
    timeout-minutes: 2
    
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '14' #'18'
      
      - name: Cache dependencies 
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('~/.npm') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run all linters
        run: npm run lint:all

      - name: Run scripts
        run: |
          # npm run script/**
          echo "URL_CHECKER_TIMEOUT=$URL_CHECKER_TIMEOUT"
          node script/url-checker.js -t $URL_CHECKER_TIMEOUT

  build:
    
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 2
    
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14' #'18'

      - name: Cache dependencies
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('~/.npm') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: |
          npm ci
          
      - name: npm update 
        run: npm update

      - name: Set PATH_PREFIX
        run: |
          PATH_PREFIX="/$(echo "${{ github.repository }}" | cut -d '/' -f2-)/"
          echo "PATH_PREFIX=$PATH_PREFIX"

      - name: Build site
        run: |
          npm run prod

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

  deploy:
  
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      issues: write
      id-token: write
    needs: build
    runs-on: ubuntu-latest

    steps:
    
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Report status
        run: |
          echo "# Deployment status: ${{ steps.deployment.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "Deployed ${{ github.ref }} to ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY

      - name: Report issue
        run: |
          gh auth login --with-token <<<"${{ secrets.GITHUB_TOKEN }}"
          DATE=$(date -u)
          STATUS="${{ steps.deployment.outcome }}"
          ISSUE_TITLE="$DATE - Deployment: $STATUS"
          URL="${{ steps.deployment.outputs.page_url }}"
          ISSUE_BODY="URL: $URL"
          echo "Title: $ISSUE_TITLE. Body: $ISSUE_BODY."
          gh issue create --repo ${{ github.repository }} --title "$ISSUE_TITLE" --body "$ISSUE_BODY"

